/*
 * Salt Edge Payment Initiation API
 * API Reference for services
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@saltedge.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.utm.gitfit.model.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * The payment resource represents a detailed description of a particular payment. They are meant to provide you with more information about the executed payments for further usage in technical and statistical purposes. 
 */
@Schema(description = "The payment resource represents a detailed description of a particular payment. They are meant to provide you with more information about the executed payments for further usage in technical and statistical purposes. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-21T15:13:42.040Z[GMT]")
public class Payment {
  @SerializedName("id")
  private String id = null;

  @SerializedName("payment_attributes")
  private PaymentAttributes paymentAttributes = null;

  @SerializedName("template_identifier")
  private String templateIdentifier = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("stages")
  private List<Stage> stages = new ArrayList<Stage>();

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("custom_fields")
  private Object customFields = null;

  public Payment id(String id) {
    this.id = id;
    return this;
  }

   /**
   * the &#x60;id&#x60; of the payment
   * @return id
  **/
  @Schema(required = true, description = "the `id` of the payment")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Payment paymentAttributes(PaymentAttributes paymentAttributes) {
    this.paymentAttributes = paymentAttributes;
    return this;
  }

   /**
   * Get paymentAttributes
   * @return paymentAttributes
  **/
  @Schema(required = true, description = "")
  public PaymentAttributes getPaymentAttributes() {
    return paymentAttributes;
  }

  public void setPaymentAttributes(PaymentAttributes paymentAttributes) {
    this.paymentAttributes = paymentAttributes;
  }

  public Payment templateIdentifier(String templateIdentifier) {
    this.templateIdentifier = templateIdentifier;
    return this;
  }

   /**
   * the &#x60;identifier&#x60; of the [payment template](#payment_templates) used for this payment
   * @return templateIdentifier
  **/
  @Schema(required = true, description = "the `identifier` of the [payment template](#payment_templates) used for this payment")
  public String getTemplateIdentifier() {
    return templateIdentifier;
  }

  public void setTemplateIdentifier(String templateIdentifier) {
    this.templateIdentifier = templateIdentifier;
  }

  public Payment status(String status) {
    this.status = status;
    return this;
  }

   /**
   * possible values are:    - &#x60;processing&#x60; -- the payment order execution is in progress, more detailed information about its status can be found in the current &#x60;stage&#x60;. Possible &#x60;stages&#x60; -  [all](#payments-stages) except for &#x60;finish&#x60;.   - &#x60;accepted&#x60; -- the payment order was accepted by the provider. Possible &#x60;stages&#x60;- &#x60;finish&#x60;.   - &#x60;rejected&#x60; -- the payment order was rejected by the provider, and a reason is provided. Possible &#x60;stages&#x60; - &#x60;finish&#x60;.   - &#x60;failed&#x60; -- either the payment order execution failed due to an unknown reason, or the service provider returned a generic error, or the provider was down, or the provider returned an unexpected response. Possible &#x60;stages&#x60; - &#x60;finish&#x60;.   - &#x60;unknown&#x60; -- the payment order could not be confirmed to be either successful or &#x60;failed&#x60;/&#x60;rejected&#x60; within the allocated time. This status will be accompanied by the &#x60;ExecutionTimeout&#x60; error class. Please &lt;a href&#x3D;&#x27;https://www.saltedge.com/pages/contact&#x27; target&#x3D;\&quot;_blank\&quot;&gt;contact us&lt;/a&gt; in case you encounter this status. Possible &#x60;stages&#x60; - &#x60;finish&#x60;.   - &#x60;deleted&#x60; -- the payment was deleted. Possible &#x60;stages&#x60;- &#x60;finish&#x60;. 
   * @return status
  **/
  @Schema(required = true, description = "possible values are:    - `processing` -- the payment order execution is in progress, more detailed information about its status can be found in the current `stage`. Possible `stages` -  [all](#payments-stages) except for `finish`.   - `accepted` -- the payment order was accepted by the provider. Possible `stages`- `finish`.   - `rejected` -- the payment order was rejected by the provider, and a reason is provided. Possible `stages` - `finish`.   - `failed` -- either the payment order execution failed due to an unknown reason, or the service provider returned a generic error, or the provider was down, or the provider returned an unexpected response. Possible `stages` - `finish`.   - `unknown` -- the payment order could not be confirmed to be either successful or `failed`/`rejected` within the allocated time. This status will be accompanied by the `ExecutionTimeout` error class. Please <a href='https://www.saltedge.com/pages/contact' target=\"_blank\">contact us</a> in case you encounter this status. Possible `stages` - `finish`.   - `deleted` -- the payment was deleted. Possible `stages`- `finish`. ")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Payment stages(List<Stage> stages) {
    this.stages = stages;
    return this;
  }

  public Payment addStagesItem(Stage stagesItem) {
    this.stages.add(stagesItem);
    return this;
  }

   /**
   * Information about [stages](#payments-stages) through which the payment has passed
   * @return stages
  **/
  @Schema(required = true, description = "Information about [stages](#payments-stages) through which the payment has passed")
  public List<Stage> getStages() {
    return stages;
  }

  public void setStages(List<Stage> stages) {
    this.stages = stages;
  }

  public Payment createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * time and date when the payment was made
   * @return createdAt
  **/
  @Schema(required = true, description = "time and date when the payment was made")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Payment updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * the last time when any of the payment&#x27;s attributes were changed
   * @return updatedAt
  **/
  @Schema(required = true, description = "the last time when any of the payment's attributes were changed")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Payment customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

   /**
   * a JSON object, which will be sent back on any of your callbacks
   * @return customFields
  **/
  @Schema(required = true, description = "a JSON object, which will be sent back on any of your callbacks")
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payment payment = (Payment) o;
    return Objects.equals(this.id, payment.id) &&
        Objects.equals(this.paymentAttributes, payment.paymentAttributes) &&
        Objects.equals(this.templateIdentifier, payment.templateIdentifier) &&
        Objects.equals(this.status, payment.status) &&
        Objects.equals(this.stages, payment.stages) &&
        Objects.equals(this.createdAt, payment.createdAt) &&
        Objects.equals(this.updatedAt, payment.updatedAt) &&
        Objects.equals(this.customFields, payment.customFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, paymentAttributes, templateIdentifier, status, stages, createdAt, updatedAt, customFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payment {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    paymentAttributes: ").append(toIndentedString(paymentAttributes)).append("\n");
    sb.append("    templateIdentifier: ").append(toIndentedString(templateIdentifier)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
