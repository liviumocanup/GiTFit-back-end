/*
 * Salt Edge Payment Initiation API
 * API Reference for services
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@saltedge.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.utm.gitfit.model.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * A provider is a Financial Institution which can execute payments. We recommend you update all of the providers&#x27; fields at least daily.  The [map](https://www.saltedge.com/products/spectre/countries?channel%5B%5D&#x3D;open_banking) with the integrated PSD2/Open Banking providers will help you to get better understanding of which banks have been integrated and find out whether your bank is already supported by Salt Edge. 
 */
@Schema(description = "A provider is a Financial Institution which can execute payments. We recommend you update all of the providers' fields at least daily.  The [map](https://www.saltedge.com/products/spectre/countries?channel%5B%5D=open_banking) with the integrated PSD2/Open Banking providers will help you to get better understanding of which banks have been integrated and find out whether your bank is already supported by Salt Edge. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-21T15:13:42.040Z[GMT]")
public class Provider {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  /**
   * the provider&#x27;s mode.
   */
  @JsonAdapter(ModeEnum.Adapter.class)
  public enum ModeEnum {
    OAUTH("oauth"),
    API("api");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ModeEnum fromValue(String input) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ModeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ModeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("mode")
  private ModeEnum mode = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("interactive")
  private Boolean interactive = null;

  @SerializedName("instruction")
  private String instruction = null;

  @SerializedName("home_url")
  private String homeUrl = null;

  @SerializedName("forum_url")
  private String forumUrl = null;

  @SerializedName("logo_url")
  private String logoUrl = null;

  @SerializedName("country_code")
  private String countryCode = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("payment_templates")
  private List<String> paymentTemplates = new ArrayList<String>();

  @SerializedName("identification_codes")
  private List<String> identificationCodes = new ArrayList<String>();

  @SerializedName("bic_codes")
  private List<String> bicCodes = new ArrayList<String>();

  @SerializedName("supported_iframe_embedding")
  private Boolean supportedIframeEmbedding = null;

  @SerializedName("supported_payment_fields")
  private Object supportedPaymentFields = null;

  @SerializedName("required_payment_fields")
  private Object requiredPaymentFields = null;

  @SerializedName("no_funds_rejection_supported")
  private Boolean noFundsRejectionSupported = null;

  public Provider id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * the &#x60;id&#x60; of the provider
   * @return id
  **/
  @Schema(required = true, description = "the `id` of the provider")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Provider code(String code) {
    this.code = code;
    return this;
  }

   /**
   * the provider&#x27;s code
   * @return code
  **/
  @Schema(required = true, description = "the provider's code")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Provider name(String name) {
    this.name = name;
    return this;
  }

   /**
   * the provider&#x27;s name
   * @return name
  **/
  @Schema(required = true, description = "the provider's name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Provider mode(ModeEnum mode) {
    this.mode = mode;
    return this;
  }

   /**
   * the provider&#x27;s mode.
   * @return mode
  **/
  @Schema(required = true, description = "the provider's mode.")
  public ModeEnum getMode() {
    return mode;
  }

  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }

  public Provider status(String status) {
    this.status = status;
    return this;
  }

   /**
   * possible values: &#x60;active&#x60;, &#x60;inactive&#x60;, &#x60;disabled&#x60;  - The providers with the &#x60;inactive&#x60; status are returned on the [providers list](#providers-list) endpoint, but are not visible on the Connect widget for the end-users. - The providers with &#x60;disabled&#x60; status are neither returned on the [providers list](#providers-list) endpoint, nor visible on the Connect widget for end-users. 
   * @return status
  **/
  @Schema(required = true, description = "possible values: `active`, `inactive`, `disabled`  - The providers with the `inactive` status are returned on the [providers list](#providers-list) endpoint, but are not visible on the Connect widget for the end-users. - The providers with `disabled` status are neither returned on the [providers list](#providers-list) endpoint, nor visible on the Connect widget for end-users. ")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Provider interactive(Boolean interactive) {
    this.interactive = interactive;
    return this;
  }

   /**
   * Whether the provider requires interactive input
   * @return interactive
  **/
  @Schema(required = true, description = "Whether the provider requires interactive input")
  public Boolean isInteractive() {
    return interactive;
  }

  public void setInteractive(Boolean interactive) {
    this.interactive = interactive;
  }

  public Provider instruction(String instruction) {
    this.instruction = instruction;
    return this;
  }

   /**
   * guidance on how to connect the provider
   * @return instruction
  **/
  @Schema(required = true, description = "guidance on how to connect the provider")
  public String getInstruction() {
    return instruction;
  }

  public void setInstruction(String instruction) {
    this.instruction = instruction;
  }

  public Provider homeUrl(String homeUrl) {
    this.homeUrl = homeUrl;
    return this;
  }

   /**
   * the URL of the main page of the provider
   * @return homeUrl
  **/
  @Schema(required = true, description = "the URL of the main page of the provider")
  public String getHomeUrl() {
    return homeUrl;
  }

  public void setHomeUrl(String homeUrl) {
    this.homeUrl = homeUrl;
  }

  public Provider forumUrl(String forumUrl) {
    this.forumUrl = forumUrl;
    return this;
  }

   /**
   * the URL for the [Salt Edge Support](https://www.saltedge.com/support_requests/new) page, dedicated to the provider
   * @return forumUrl
  **/
  @Schema(required = true, description = "the URL for the [Salt Edge Support](https://www.saltedge.com/support_requests/new) page, dedicated to the provider")
  public String getForumUrl() {
    return forumUrl;
  }

  public void setForumUrl(String forumUrl) {
    this.forumUrl = forumUrl;
  }

  public Provider logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * the URL for the provider logo. May have a placeholder for providers with missing logos. 
   * @return logoUrl
  **/
  @Schema(required = true, description = "the URL for the provider logo. May have a placeholder for providers with missing logos. ")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public Provider countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Code of the provider&#x27;s &#x60;country&#x60;
   * @return countryCode
  **/
  @Schema(required = true, description = "Code of the provider's `country`")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public Provider createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * time and date when the provider was integrated
   * @return createdAt
  **/
  @Schema(required = true, description = "time and date when the provider was integrated")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Provider updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * the last time when any of the provider’s attributes were changed
   * @return updatedAt
  **/
  @Schema(required = true, description = "the last time when any of the provider’s attributes were changed")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Provider paymentTemplates(List<String> paymentTemplates) {
    this.paymentTemplates = paymentTemplates;
    return this;
  }

  public Provider addPaymentTemplatesItem(String paymentTemplatesItem) {
    this.paymentTemplates.add(paymentTemplatesItem);
    return this;
  }

   /**
   * identifiers of the [payment templates](#payment_templates) that are supported by this provider
   * @return paymentTemplates
  **/
  @Schema(required = true, description = "identifiers of the [payment templates](#payment_templates) that are supported by this provider")
  public List<String> getPaymentTemplates() {
    return paymentTemplates;
  }

  public void setPaymentTemplates(List<String> paymentTemplates) {
    this.paymentTemplates = paymentTemplates;
  }

  public Provider identificationCodes(List<String> identificationCodes) {
    this.identificationCodes = identificationCodes;
    return this;
  }

  public Provider addIdentificationCodesItem(String identificationCodesItem) {
    this.identificationCodes.add(identificationCodesItem);
    return this;
  }

   /**
   * list of codes identifying supported branches of a specific provider. It may include BLZ(Germany), ABI+CAB(Italy), Branch Codes(France) etc.
   * @return identificationCodes
  **/
  @Schema(required = true, description = "list of codes identifying supported branches of a specific provider. It may include BLZ(Germany), ABI+CAB(Italy), Branch Codes(France) etc.")
  public List<String> getIdentificationCodes() {
    return identificationCodes;
  }

  public void setIdentificationCodes(List<String> identificationCodes) {
    this.identificationCodes = identificationCodes;
  }

  public Provider bicCodes(List<String> bicCodes) {
    this.bicCodes = bicCodes;
    return this;
  }

  public Provider addBicCodesItem(String bicCodesItem) {
    this.bicCodes.add(bicCodesItem);
    return this;
  }

   /**
   * list of BIC codes identifying supported branches of a specific provider.
   * @return bicCodes
  **/
  @Schema(required = true, description = "list of BIC codes identifying supported branches of a specific provider.")
  public List<String> getBicCodes() {
    return bicCodes;
  }

  public void setBicCodes(List<String> bicCodes) {
    this.bicCodes = bicCodes;
  }

  public Provider supportedIframeEmbedding(Boolean supportedIframeEmbedding) {
    this.supportedIframeEmbedding = supportedIframeEmbedding;
    return this;
  }

   /**
   * Provider can be embedded in &#x60;iframe&#x60;.
   * @return supportedIframeEmbedding
  **/
  @Schema(required = true, description = "Provider can be embedded in `iframe`.")
  public Boolean isSupportedIframeEmbedding() {
    return supportedIframeEmbedding;
  }

  public void setSupportedIframeEmbedding(Boolean supportedIframeEmbedding) {
    this.supportedIframeEmbedding = supportedIframeEmbedding;
  }

  public Provider supportedPaymentFields(Object supportedPaymentFields) {
    this.supportedPaymentFields = supportedPaymentFields;
    return this;
  }

   /**
   * if these fields are passed, they will be used by the provider. Otherwise, the payment will we processed even without them.
   * @return supportedPaymentFields
  **/
  @Schema(description = "if these fields are passed, they will be used by the provider. Otherwise, the payment will we processed even without them.")
  public Object getSupportedPaymentFields() {
    return supportedPaymentFields;
  }

  public void setSupportedPaymentFields(Object supportedPaymentFields) {
    this.supportedPaymentFields = supportedPaymentFields;
  }

  public Provider requiredPaymentFields(Object requiredPaymentFields) {
    this.requiredPaymentFields = requiredPaymentFields;
    return this;
  }

   /**
   * mandatory payment attributes. If any of these fields are not passed, the payment will not be initiated successfully.
   * @return requiredPaymentFields
  **/
  @Schema(description = "mandatory payment attributes. If any of these fields are not passed, the payment will not be initiated successfully.")
  public Object getRequiredPaymentFields() {
    return requiredPaymentFields;
  }

  public void setRequiredPaymentFields(Object requiredPaymentFields) {
    this.requiredPaymentFields = requiredPaymentFields;
  }

  public Provider noFundsRejectionSupported(Boolean noFundsRejectionSupported) {
    this.noFundsRejectionSupported = noFundsRejectionSupported;
    return this;
  }

   /**
   * A flag which indicates whether the bank supports explicit handling of payment rejection due to insufficient funds.  For example, it can be a header in the request (&#x60;TPP-Rejection-NoFunds-Preferred&#x60;) which set to &#x60;true&#x60; will automatically reject the payment in case of insufficient funds. Note that many banks handle this behaviour by default, but some of them offer the possibility to choose the outcome of insufficient funds. 
   * @return noFundsRejectionSupported
  **/
  @Schema(description = "A flag which indicates whether the bank supports explicit handling of payment rejection due to insufficient funds.  For example, it can be a header in the request (`TPP-Rejection-NoFunds-Preferred`) which set to `true` will automatically reject the payment in case of insufficient funds. Note that many banks handle this behaviour by default, but some of them offer the possibility to choose the outcome of insufficient funds. ")
  public Boolean isNoFundsRejectionSupported() {
    return noFundsRejectionSupported;
  }

  public void setNoFundsRejectionSupported(Boolean noFundsRejectionSupported) {
    this.noFundsRejectionSupported = noFundsRejectionSupported;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Provider provider = (Provider) o;
    return Objects.equals(this.id, provider.id) &&
        Objects.equals(this.code, provider.code) &&
        Objects.equals(this.name, provider.name) &&
        Objects.equals(this.mode, provider.mode) &&
        Objects.equals(this.status, provider.status) &&
        Objects.equals(this.interactive, provider.interactive) &&
        Objects.equals(this.instruction, provider.instruction) &&
        Objects.equals(this.homeUrl, provider.homeUrl) &&
        Objects.equals(this.forumUrl, provider.forumUrl) &&
        Objects.equals(this.logoUrl, provider.logoUrl) &&
        Objects.equals(this.countryCode, provider.countryCode) &&
        Objects.equals(this.createdAt, provider.createdAt) &&
        Objects.equals(this.updatedAt, provider.updatedAt) &&
        Objects.equals(this.paymentTemplates, provider.paymentTemplates) &&
        Objects.equals(this.identificationCodes, provider.identificationCodes) &&
        Objects.equals(this.bicCodes, provider.bicCodes) &&
        Objects.equals(this.supportedIframeEmbedding, provider.supportedIframeEmbedding) &&
        Objects.equals(this.supportedPaymentFields, provider.supportedPaymentFields) &&
        Objects.equals(this.requiredPaymentFields, provider.requiredPaymentFields) &&
        Objects.equals(this.noFundsRejectionSupported, provider.noFundsRejectionSupported);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, name, mode, status, interactive, instruction, homeUrl, forumUrl, logoUrl, countryCode, createdAt, updatedAt, paymentTemplates, identificationCodes, bicCodes, supportedIframeEmbedding, supportedPaymentFields, requiredPaymentFields, noFundsRejectionSupported);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Provider {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    interactive: ").append(toIndentedString(interactive)).append("\n");
    sb.append("    instruction: ").append(toIndentedString(instruction)).append("\n");
    sb.append("    homeUrl: ").append(toIndentedString(homeUrl)).append("\n");
    sb.append("    forumUrl: ").append(toIndentedString(forumUrl)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    paymentTemplates: ").append(toIndentedString(paymentTemplates)).append("\n");
    sb.append("    identificationCodes: ").append(toIndentedString(identificationCodes)).append("\n");
    sb.append("    bicCodes: ").append(toIndentedString(bicCodes)).append("\n");
    sb.append("    supportedIframeEmbedding: ").append(toIndentedString(supportedIframeEmbedding)).append("\n");
    sb.append("    supportedPaymentFields: ").append(toIndentedString(supportedPaymentFields)).append("\n");
    sb.append("    requiredPaymentFields: ").append(toIndentedString(requiredPaymentFields)).append("\n");
    sb.append("    noFundsRejectionSupported: ").append(toIndentedString(noFundsRejectionSupported)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
